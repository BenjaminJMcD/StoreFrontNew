@model Dictionary<int, StoreFrontLab.UI.MVC.Models.CartItemViewModel>

@{
    ViewBag.Title = "Shopping Cart";

    decimal? cartTotal = 0;
    int totalCountOfItems = 0;
}

<h2 style="color:silver;">@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Back to Shopping", "Index", "Records", null, new { @class = "btn btn-danger" })
</p>

@if (ViewBag.Message != null)
{
    <h3 style="text-align:center;color:darkorange">@ViewBag.Message</h3>
}
else
{

    <table class="table">
        <tr>
            <th>Record Cover</th>
            <th>Record Name</th>
            <th>Artist</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <!--Model represents our dictionary, to get to specific values in the product portion of that collection, we need to access the Value property, then Product, then property to display.-->
                    <img src="~/Content/RecordCovers/@item.Value.Product.CoverImage" alt="Record Cover" title="@item.Value.Product.RecordName" style="max-width:80%;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value.Product.RecordName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value.Product.BandMusician)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value.Product.Price)
                </td>
                <td>
                    <!--Allow for a change to the qty in the cart index-->
                    @using (Html.BeginForm("UpdateCart", "ShoppingCart", FormMethod.Post))
                    {
                        //pass the id of the book in this LINE item
                        @Html.Hidden("recordID", item.Value.Product.RecordID)
                        @Html.TextBox("qty", item.Value.Qty, new { @class = "form-control", style = "max-width:75px;display:inline;" })

                        <input type="submit" value="Update Quantity" class="btn btn-primary" />
                    }
                    @{totalCountOfItems += item.Value.Qty;}
                </td>
                <td>
                    <!--Calculate the line total and display in currency format-->
                    @{
                        decimal? lineTotal = item.Value.Product.Price * item.Value.Qty;
                        <!--Update the cart total by summing the line total-->
                        cartTotal += lineTotal;
                    }
                    @string.Format($"{lineTotal:c}")
                </td>
                <td>
                    @Html.ActionLink("Remove From Cart", "RemoveFromCart", new { id = item.Value.Product.RecordID })
                </td>
            </tr>
        }
        <p style="float:right;">
            You have @totalCountOfItems  @(totalCountOfItems > 1 ? "records" : "record") in your cart. Your total before taxes and shipping is @string.Format($"{cartTotal:c}")
        </p>
    </table>



    <div class="break"></div>
}@*END ELSE*@
