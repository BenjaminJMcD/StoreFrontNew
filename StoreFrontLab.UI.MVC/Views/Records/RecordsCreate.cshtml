@model StoreFront.DATA.EF.Record

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "RecordsCreateForm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>Record</h4>
        <hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-3">
                <h4>Record Name</h4>
                @Html.EditorFor(model => model.RecordName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecordName, "", new { @class = "text-danger" })
            </div>


            <div class="col-md-3">
                <h4>Artist</h4>
                @Html.EditorFor(model => model.BandMusician, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BandMusician, "", new { @class = "text-danger" })
            </div>


            <div class="col-md-3">
                <h4>Genre</h4>
                @Html.EditorFor(model => model.Genre.GenreName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre.GenreName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <h4>Release Date</h4>
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                <h4>Price</h4>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>


            <div class="col-md-3">
                <h4>Cover Image</h4>
                <input type="file" style="display:inline" name="logo" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <h4>Stock Status</h4>
                @Html.EditorFor(model => model.StockStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StockStatus, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                <h4>Producer</h4>
                @Html.EditorFor(model => model.Producer.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Producer.FullName, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                <h4>Category</h4>
                @Html.DropDownList("Category.CategoryName", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <h4>Colored LP Description (Leave Blank if N/A)</h4>
                @Html.EditorFor(model => model.ColoredLP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ColoredLP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
